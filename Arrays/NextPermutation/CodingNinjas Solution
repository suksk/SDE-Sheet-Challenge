import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		// Write your code here.
		int n = permutation.size();

		//Step 1: Find the break point 
		int ind = -1;  //break point

		for(int i = n-2; i >= 0; i--)
		{
			if(permutation.get(i) < permutation.get(i+1))
			{
				//index i is the break point
				ind = i;
				break;
			}
		}

		//If break point does not exist
		if(ind == -1)
		{
			//Reverse the whole array 
			Collections.reverse(permutation);
			return permutation;
		}
		//Step 2: Find the next greater element 
		//        and swap it with arr[ind]
		for(int i = n-1; i > ind; i--)
		{
			if(permutation.get(i) > permutation.get(ind))
			{
				int temp = permutation.get(i);
				permutation.set(i , permutation.get(ind));
				permutation.set(ind , temp);
				break;
			}
		}
        //Step 3: Reverse the right half

		List<Integer> sublist = permutation.subList(ind + 1 , n);
        Collections.reverse(sublist);
		return(permutation);
	}
}
